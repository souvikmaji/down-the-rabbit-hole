{"version":3,"sources":["webpack:///./src/components/Post/Comments/Comments.js","webpack:///./src/components/Post/Content/Content.js","webpack:///./src/components/Post/Meta/Meta.js","webpack:///./src/components/Post/Tags/Tags.js","webpack:///./src/components/Post/Post.js","webpack:///./src/templates/post-template.js","webpack:///./src/components/Layout/Layout.js","webpack:///./src/components/Layout/index.js","webpack:///./node_modules/react-disqus-comments/build/main.js","webpack:///./node_modules/react-disqus-comments/build/components/DisqusThread.js"],"names":["PureComments","_ref","data","postTitle","postSlug","_data$site$siteMetada","site","siteMetadata","siteUrl","disqusShortname","console","log","react_default","a","createElement","main_default","shortname","identifier","title","url","Comments","props","gatsby_browser_entry","query","render","Comments_PureComments","Object","assign","_1989642023","Content","body","className","styles","dangerouslySetInnerHTML","__html","Meta","date","moment","format","Tags","tags","tagSlugs","map","slug","i","key","to","Post","post","_post$frontmatter","frontmatter","html","fields","Post_Content_Content","Post_Meta_Meta","Post_Tags_Tags","Post_Comments_Comments","__webpack_require__","d","__webpack_exports__","PostTemplate","siteTitle","siteSubtitle","subtitle","_data$markdownRemark$","markdownRemark","postDescription","description","metaDescription","Layout","components_Post_Post","children","layout","Helmet_default","lang","name","content","components_Layout_Layout","module","exports","defineProperty","value","_extends","target","arguments","length","source","prototype","hasOwnProperty","call","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_react2","_interopRequireDefault","_propTypes2","obj","__esModule","default","DISQUS_CONFIG","__disqusAdded","copyProps","context","onNewComment","language","rest","keys","indexOf","_objectWithoutProperties","prop","page","callbacks","DisqusThread","_React$Component","instance","TypeError","_classCallCheck","this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","loadDisqus","nextProps","nextState","_this2","reduce","memo","some","config","_defineProperty","id","child","disqus","document","parent","getElementsByTagName","async","type","src","appendChild","_this3","forEach","DISQUS","reset","reload","replace","window","disqus_config","addDisqusScript","displayName","propTypes","string","isRequired","category_id","func","defaultProps","location","href"],"mappings":"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","file":"component---src-templates-post-template-js-099bb7f61c9b5d7014ad.js","sourcesContent":["import React from 'react';\nimport { graphql, StaticQuery } from 'gatsby';\nimport ReactDisqusComments from 'react-disqus-comments';\n\nexport const PureComments = ({ data, postTitle, postSlug }) => {\n  const {\n    siteUrl,\n    disqusShortname\n  } = data.site.siteMetadata;\n\n  if (!disqusShortname) {\n    return null;\n  }\n  console.log('siteUrl', siteUrl);\n  console.log('postSlug', postSlug);\n  return (\n    <ReactDisqusComments\n      shortname={disqusShortname}\n      identifier={postTitle}\n      title={postTitle}\n      url={siteUrl + postSlug}\n    />\n  );\n};\n\nexport const Comments = (props) => (\n  <StaticQuery\n    query={graphql`\n      query CommentsQuery {\n        site {\n          siteMetadata {\n            disqusShortname\n            url\n          }\n        }\n      }\n    `}\n    render={(data) => <PureComments {...props} data={data}/>}\n  />\n);\n\nexport default Comments;\n","import React from 'react';\nimport styles from './Content.module.scss';\n\nconst Content = ({ body, title }) => (\n  <div className={styles['content']}>\n    <h1 className={styles['content__title']}>{title}</h1>\n    <div className={styles['content__body']} dangerouslySetInnerHTML={{ __html: body }} />\n  </div>\n);\n\nexport default Content;\n","import React from 'react';\nimport moment from 'moment';\nimport styles from './Meta.module.scss';\n\nconst Meta = ({ date }) => (\n  <div className={styles['meta']}>\n    <p className={styles['meta__date']}>Published {moment(date).format('D MMM YYYY')}</p>\n  </div>\n);\n\nexport default Meta;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport styles from './Tags.module.scss';\n\nconst Tags = ({ tags, tagSlugs }) => (\n  <div className={styles['tags']}>\n    <ul className={styles['tags__list']}>\n      {tagSlugs.map((slug, i) => (\n        <li className={styles['tags__list-item']} key={tags[i]}>\n          <Link to={slug} className={styles['tags__list-item-link']}>\n            {tags[i]}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n\nexport default Tags;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport Comments from './Comments';\nimport Content from './Content';\nimport Meta from './Meta';\nimport Tags from './Tags';\nimport styles from './Post.module.scss';\n\nconst Post = ({ post }) => {\n  const {\n    tags,\n    title,\n    date\n  } = post.frontmatter;\n\n  const { html } = post;\n  const { tagSlugs } = post.fields;\n\n  return (\n    <div className={styles['post']}>\n      <Link className={styles['post__home-button']} to=\"/\">All Articles</Link>\n\n      <div className={styles['post__content']}>\n        <Content body={html} title={title} />\n      </div>\n\n      <div className={styles['post__footer']}>\n        <Meta date={date} />\n        <Tags tags={tags} tagSlugs={tagSlugs} />\n      </div>\n\n      <div className={styles['post__comments']}>\n        <Comments postSlug={post.fields.slug} postTitle={post.frontmatter.title} />\n      </div>\n    </div>\n  );\n};\n\nexport default Post;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Post from '../components/Post';\n\nconst PostTemplate = ({ data }) => {\n  const {\n    title: siteTitle,\n    subtitle: siteSubtitle\n  } = data.site.siteMetadata;\n\n  const {\n    title: postTitle,\n    description: postDescription\n  } = data.markdownRemark.frontmatter;\n\n  const metaDescription = postDescription !== null ? postDescription : siteSubtitle;\n\n  return (\n    <Layout title={`${postTitle} - ${siteTitle}`} description={metaDescription}>\n      <Post post={data.markdownRemark} />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query PostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        author {\n          name\n          contacts {\n            twitter\n          }\n        }\n        disqusShortname\n        subtitle\n        title\n        url\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      fields {\n        tagSlugs\n      }\n      frontmatter {\n        date\n        description\n        tags\n        title\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport styles from './Layout.module.scss';\n\nconst Layout = ({ children, title, description }) => (\n  <div className={styles.layout}>\n    <Helmet>\n      <html lang=\"en\" />\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n    {children}\n  </div>\n);\n\nexport default Layout;\n","export { default } from './Layout';\n","'use strict';\n\nmodule.exports = require('./components/DisqusThread');","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar DISQUS_CONFIG = ['shortname', 'identifier', 'title', 'url', 'category_id', 'onNewComment', 'language'];\nvar __disqusAdded = false;\n\nfunction copyProps(context, props) {\n    var onNewComment = props.onNewComment,\n        language = props.language,\n        rest = _objectWithoutProperties(props, ['onNewComment', 'language']);\n\n    for (var prop in rest) {\n        context.page[prop] = rest[prop];\n    }\n\n    // Setting the language - if none is provided, the default one is used\n    context.language = language;\n\n    if (onNewComment) {\n        context.callbacks = {\n            onNewComment: [onNewComment]\n        };\n    }\n}\n\nvar DisqusThread = function (_React$Component) {\n    _inherits(DisqusThread, _React$Component);\n\n    function DisqusThread() {\n        _classCallCheck(this, DisqusThread);\n\n        return _possibleConstructorReturn(this, (DisqusThread.__proto__ || Object.getPrototypeOf(DisqusThread)).apply(this, arguments));\n    }\n\n    _createClass(DisqusThread, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate() {\n            this.loadDisqus();\n        }\n    }, {\n        key: 'shouldComponentUpdate',\n        value: function shouldComponentUpdate(nextProps, nextState) {\n            return nextProps.identifier !== this.props.identifier;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var props = Object.keys(this.props).reduce(function (memo, key) {\n                return DISQUS_CONFIG.some(function (config) {\n                    return config === key;\n                }) ? memo : _extends({}, memo, _defineProperty({}, key, _this2.props[key]));\n            }, {});\n\n            return _react2.default.createElement(\n                'div',\n                props,\n                _react2.default.createElement('div', { id: 'disqus_thread' })\n            );\n        }\n    }, {\n        key: 'addDisqusScript',\n        value: function addDisqusScript() {\n            if (__disqusAdded) {\n                return;\n            }\n\n            var child = this.disqus = document.createElement('script');\n            var parent = document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0];\n\n            child.async = true;\n            child.type = 'text/javascript';\n            child.src = '//' + this.props.shortname + '.disqus.com/embed.js';\n\n            parent.appendChild(child);\n            __disqusAdded = true;\n        }\n    }, {\n        key: 'loadDisqus',\n        value: function loadDisqus() {\n            var _this3 = this;\n\n            var props = {};\n\n            // Extract Disqus props that were supplied to this component\n            DISQUS_CONFIG.forEach(function (prop) {\n                // prop \"shortname\" is only necessary for loading the script, not for the config itself\n                if (prop !== 'shortname' && !!_this3.props[prop]) {\n                    props[prop] = _this3.props[prop];\n                }\n            });\n\n            // If Disqus has already been added, reset it\n            if (typeof DISQUS !== 'undefined') {\n                DISQUS.reset({\n                    reload: true,\n                    config: function config() {\n                        copyProps(this, props);\n\n                        // Disqus needs hashbang URL, see https://help.disqus.com/customer/portal/articles/472107\n                        this.page.url = this.page.url.replace(/#/, '') + '#!newthread';\n                    }\n                });\n            } else {\n                // Otherwise add Disqus to the page\n                window.disqus_config = function () {\n                    copyProps(this, props);\n                };\n                this.addDisqusScript();\n            }\n        }\n    }]);\n\n    return DisqusThread;\n}(_react2.default.Component);\n\nDisqusThread.displayName = 'DisqusThread';\n\nDisqusThread.propTypes = {\n    id: _propTypes2.default.string,\n\n    /**\n     * `shortname` tells the Disqus service your forum's shortname,\n     * which is the unique identifier for your website as registered\n     * on Disqus. If undefined , the Disqus embed will not load.\n     */\n    shortname: _propTypes2.default.string.isRequired,\n\n    /**\n     * `identifier` tells the Disqus service how to identify the\n     * current page. When the Disqus embed is loaded, the identifier\n     * is used to look up the correct thread. If disqus_identifier\n     * is undefined, the page's URL will be used. The URL can be\n     * unreliable, such as when renaming an article slug or changing\n     * domains, so we recommend using your own unique way of\n     * identifying a thread.\n     */\n    identifier: _propTypes2.default.string,\n\n    /**\n     * `title` tells the Disqus service the title of the current page.\n     * This is used when creating the thread on Disqus for the first time.\n     * If undefined, Disqus will use the <title> attribute of the page.\n     * If that attribute could not be used, Disqus will use the URL of the page.\n     */\n    title: _propTypes2.default.string,\n\n    /**\n     * `url` tells the Disqus service the URL of the current page.\n     * If undefined, Disqus will take the window.location.href.\n     * This URL is used to look up or create a thread if disqus_identifier\n     * is undefined. In addition, this URL is always saved when a thread is\n     * being created so that Disqus knows what page a thread belongs to.\n     */\n    url: _propTypes2.default.string,\n\n    /**\n     * `category_id` tells the Disqus service the category to be used for\n     * the current page. This is used when creating the thread on Disqus\n     * for the first time.\n     */\n    category_id: _propTypes2.default.string,\n\n    /**\n     * `onNewComment` function accepts one parameter `comment` which is a\n     * JavaScript object with comment `id` and `text`. This allows you to track\n     * user comments and replies and run a script after a comment is posted.\n     */\n    onNewComment: _propTypes2.default.func,\n\n    /**\n     * `language` tells the Disqus service which language should be used.\n     * Please refer to https://www.transifex.com/disqus/disqus/ on which languages can be used\n     * If undefined, English is used as default one\n     */\n    language: _propTypes2.default.string\n};\n\nDisqusThread.defaultProps = {\n    url: typeof window === 'undefined' ? null : window.location.href\n};\n\nexports.default = DisqusThread;"],"sourceRoot":""}